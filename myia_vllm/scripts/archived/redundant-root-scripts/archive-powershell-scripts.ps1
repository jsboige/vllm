#!/usr/bin/env pwsh
<#
.SYNOPSIS
Archive le r√©pertoire powershell/ selon le Plan de Restauration V2 - Phase 1.1

.DESCRIPTION
Ce script archive tous les scripts du r√©pertoire powershell/ vers archived/powershell-deprecated/
selon les directives SDDD du Plan de Restauration V2.

.NOTES
Date: 25 septembre 2025
M√©thodologie: SDDD - Phase 6e: Consolidation Scripturale Finale
Responsable: Roo Code Mode
#>

[CmdletBinding()]
param()

# Configuration
$PowerShellDir = "myia_vllm/scripts/powershell"
$ArchiveDir = "myia_vllm/scripts/archived/powershell-deprecated"

Write-Host "=== ARCHIVAGE POWERSHELL/ - PLAN V2 PHASE 1.1 ===" -ForegroundColor Cyan
Write-Host "M√©thodologie: SDDD - Consolidation Scripturale Finale`n"

# V√©rifier existence du r√©pertoire source
if (-not (Test-Path $PowerShellDir)) {
    Write-Host "‚ùå ERREUR: R√©pertoire $PowerShellDir introuvable" -ForegroundColor Red
    exit 1
}

# Compter les scripts √† archiver
$ScriptsToArchive = Get-ChildItem -Path $PowerShellDir -File -Filter "*.ps1"
$ScriptCount = $ScriptsToArchive.Count

Write-Host "üìä Scripts identifi√©s dans powershell/: $ScriptCount" -ForegroundColor Yellow
foreach ($script in $ScriptsToArchive) {
    $sizeKB = [math]::Round($script.Length / 1KB, 2)
    Write-Host "  - $($script.Name) ($sizeKB KB)"
}
Write-Host

# Cr√©er le r√©pertoire d'archive
Write-Host "üìÅ Cr√©ation r√©pertoire d'archive: $ArchiveDir" -ForegroundColor Green
New-Item -ItemType Directory -Path $ArchiveDir -Force | Out-Null

# Archiver tous les scripts
Write-Host "üîÑ Archivage en cours..." -ForegroundColor Yellow
try {
    Move-Item -Path "$PowerShellDir/*" -Destination $ArchiveDir -Force
    Write-Host "‚úÖ $ScriptCount scripts archiv√©s avec succ√®s" -ForegroundColor Green
} catch {
    Write-Host "‚ùå ERREUR lors de l'archivage: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Supprimer le r√©pertoire vide
Write-Host "üóëÔ∏è Suppression r√©pertoire vide powershell/" -ForegroundColor Yellow
Remove-Item -Path $PowerShellDir -Force

# V√©rifications finales
Write-Host "`n=== V√âRIFICATION POST-ARCHIVAGE ===" -ForegroundColor Cyan

$ArchivedFiles = Get-ChildItem -Path $ArchiveDir -File -Filter "*.ps1"
Write-Host "‚úÖ Fichiers archiv√©s: $($ArchivedFiles.Count)" -ForegroundColor Green

if (Test-Path $PowerShellDir) {
    Write-Host "‚ùå ERREUR: R√©pertoire powershell/ existe encore" -ForegroundColor Red
    exit 1
} else {
    Write-Host "‚úÖ R√©pertoire powershell/ supprim√© avec succ√®s" -ForegroundColor Green
}

Write-Host "`nüéØ PHASE 1.1 ACCOMPLIE - Entropie powershell/ √©limin√©e" -ForegroundColor Green
Write-Host "Conformit√© Plan V2: powershell/ ‚Üí archived/powershell-deprecated/" -ForegroundColor Cyan